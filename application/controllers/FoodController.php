<?php
defined('BASEPATH') OR exit('No direct script access allowed');
class FoodController extends CI_Controller {

    public function __construct(){
        ob_start();
        parent::__construct();
        $this->load->library('session');
        $this->load->model('FoodModel','FoodModel');
        $this->load->model('Security_set', 'sq');
        $this->load->model('Role_chk', 'chk');

        $logged_status=$this->session->userdata('logged_status');

        // echo $this->sq->check_exist_q();

        if($logged_status==FALSE){
            redirect('mms24','location');
        }

        $passChang = $this->setup->forcePassChange();

        if($passChang==false){
            redirect("setup_section/changePassword");
        }
        $get = $this->setup->basicUnionSetup();
        if($get==false){
            redirect("setup/updatesetupform",'location');
        }
    }
    //functions
    function index(){
        $data["title"] = "Applicant Info (Food Distributes)";
        $this->load->view('admin/topBar',$data);
        $this->load->view('admin/leftMenu');
        $this->load->view('foodDistribute/applicantInfo');
        $this->load->view('admin/footer');
    }
   public function applicantInfo(){

        $fetch_data = $this->FoodModel->get_data_info();
        $data = array();
        $sl=1;
        foreach($fetch_data as $row)
        {
            $action='';
            $img=file_exists($row->pic)?base_url().$row->pic:'img/default/default.jpg';
            $sub_array = array();
            $sub_array[] = $sl;
            $sub_array[] = '<img src="'.$img.'" class="img-thumbnail" width="50" height="35"  />';
            $sub_array[] = $row->applicant_id;
            $sub_array[] = $row->card_no;

            $sub_array[] = $row->nid;
            $sub_array[] = $row->name;
            $sub_array[] = $row->father_name;
            $sub_array[] = $row->mobile;
            $action.='<a href="'.base_url('FoodController/editApplicantInfo/'.md5($row->id)).'" name="update" id="'.$row->id.'" class="btn btn-info btn-xs" title="Edit"><i class="glyphicon glyphicon-pencil"></i> Edit </a> <button type="button" name="delete" title="Delete" id="'.$row->id.'" class="btn btn-danger btn-xs"><i class="glyphicon glyphicon-remove"></i> Delete</button>';
            if($row->is_verify==1) {
                $action .= ' <button type="button" name="update" id="' . $row->id . '" class="btn btn-warning btn-xs" style="margin:2px;"><i class="glyphicon glyphicon-refresh"></i> Verify Now</button>';
            }else{
                $action .= '<span class="badge" style="margin:2px;"> <i class="glyphicon glyphicon-ok-circle"></i> Verified</span>';
            }
            $sub_array[] =$action;
            $data[] = $sub_array;
            $sl++;
        }

        $output = array(
            "draw"                    =>     intval($_POST["draw"]),
            "recordsTotal"          =>      $this->FoodModel->get_all_data(),
            "recordsFiltered"     =>     $this->FoodModel->get_filtered_data(),
            "data"                    =>     $data
        );
        echo json_encode($output);
    }

    function newApplicantInfo(){
        $data["title"] = "Add New Applicant Info (Food Distributes)";
        $data["dealers"] = $this->FoodModel->get_all_info('id,name',"food_dealer_info",['is_active'=>1,'type'=>1]);
         $data["issuing_authority"] = $this->FoodModel->get_all_info('id,name',"food_dealer_info",['is_active'=>1,'type'=>2]);
        $data['occupation'] =$this->FoodModel->get_all_info('id,title',"snf_global_form", ['type' => 1, 'status' => 1]);

        $this->load->view('admin/topBar',$data);
        $this->load->view('admin/leftMenu');
        $this->load->view('foodDistribute/newApplicantInfo');
        $this->load->view('admin/footer');
    }

    function verifyNID(){
        extract($_POST);
        if(empty($nid)){
            echo json_encode(['status'=>'error','message'=>'NID Number is required']);exit;
        }
        if(!empty($nid) && (strlen($nid)>18 ||  strlen($nid)<10) ){
            echo json_encode(['status'=>'error','message'=>'Invalid NID Number,ID must be 10, 13 or 17 digits, Your NID digit is '.strlen($nid)]);exit;
        }


        // kvstore API url
//        3287844728
        $data = [
            'national_id'=>$nid,
            'team_tx_id'=>'',
            'english_output'=>true,
            'person_dob'=>''
        ];
        $url = 'https://porichoy.azurewebsites.net/api/Kyc/nid-person-values';
        $apiKey='b6a416f7-2487-4800-a9bc-93c80552bb3e';
       // $info= $this->FoodModel->getPorichoyApiInfo($data,$url,$apiKey);
       // $info= '{"message":"Error: ID must be 10, 13 or 17 digits"}';
        $info='{
    "voter": {
        "name": "আবু বক্কর ছিদ্দিক",
        "nameEn": "ABU BAKER SIDDIQUE",
        "father": "আবদুল মমিন",
        "mother": "রেজিয়া বেগম",
        "gender": "male",
        "spouse": null,
        "dob": "08/15/1995",
        "permanentAddress": "বাসা/হোল্ডিং: হাসেম মাষ্টার বাড়ি, গ্রাম/রাস্তা: উত্তর জায়লস্কর, জায়লস্কর, ডাকঘর: জায়লস্কর-৩৯০০, দাগনভূঁঞা, ফেনী",
        "presentAddress": null,
        "photo": "",
        "fatherEn": "Abdul Momin",
        "motherEn": "Rezia Begum",
        "spouseEn": null,
        "permanentAddressEn": "Home / Holding: Hashem Master House, Village / Road: North Jailskar, Jailskar, Post Office: Jailskar-3900, Daganbhuna, Feni",
        "presentAddressEn": null
    },
    "passKyc": "yes",
    "errorCode": null
}
';
//        "permanentAddress": "বাসা/হোল্ডিং: ৫১০, গ্রাম/রাস্তা: 30149544601, শুভপুর, ডাকঘর: শুভপুর-৩৯০১, ছাগলনাইয়া, ফেনী",
        $responseData=(!empty($info)?json_decode($info):'');
        if(empty($responseData->voter)){
            echo json_encode(['status'=>'error','message'=>$responseData->message]);exit;
        }elseif(!empty($responseData->voter)){
            $voterInfo=$responseData->voter;
            $voterInfo->dobNew=(!empty($voterInfo->dob)?date('d-m-Y',strtotime($voterInfo->dob)):'');
            $pAddress=(!empty($voterInfo->permanentAddress)?explode(":",$voterInfo->permanentAddress):'');

            if(!empty($pAddress)) {
                // divided holding & Basha
                $holding_exp = (!empty($pAddress[1]) ? explode(",", $pAddress[1]) : '');
                $voterInfo->holding_basha = (!empty($holding_exp[0]) ?$holding_exp[0] : '');

                // divided village
                $village_exp = (!empty($pAddress[2]) ? explode(",", $pAddress[2]) : '');
                $voterInfo->village = (!empty($village_exp[0])?trim($village_exp[0]) : '');

                // divided Post Office
                $postOfficeExp = (!empty($pAddress[3]) ? explode(",", $pAddress[3]) : '');
                $voterInfo->post_office = (!empty($postOfficeExp[0])?trim($postOfficeExp[0]) : '');

                //Upazila
                $voterInfo->upazila = (!empty($postOfficeExp[1])?trim($postOfficeExp[1]) : '');
                $voterInfo->district = (!empty($postOfficeExp[2])?trim($postOfficeExp[2]) : '');
            }
            $photoData=(!empty($voterInfo->photo)?$voterInfo->photo:'');

            if(!empty($photoData)) {
                $image_name = 'NID_VERIFY_IMAGE_' . rand() . uniqid() . '.jpg';
                $voterInfo->image = $this->FoodModel->base64_to_jpeg($photoData, 'library/NID_image/' . $image_name);
            }
            $voterInfo->photo='';
            echo json_encode(['status'=>'success','message'=>'Successfully Data Found','data'=>$responseData->voter]); exit;
        }else{
            echo json_encode(['status'=>'error','message'=>$responseData->message]); exit;
        }

// Collection object

    }
    public function newApplicantInfoAction()
    {
        if(isset($_POST['food_applicant_info_submit'])){
            extract($_POST);
            $error_array = array();
            $success_output = '';

            if(empty($n_id)){
                $error_array[] = 'জাতীয় পরিচয় পত্র  নম্বর   প্রদান করূন';
            }
            if(empty($cardNo)){
                $error_array[] = 'কার্ড নম্বর প্রদান করুন';
            }

            if(empty($full_name)){
                $error_array[] = 'কার্ডধারীর নাম  প্রদান করুন';
            }
            if(empty($dofb)){
                $error_array[] = 'জম্ম তারিখ প্রদান করুন';
            }
            if(empty($village)){
                $error_array[] = 'গ্রামের নাম প্রদান করূন';
            }
            if(empty($wordNo)){
                $error_array[] = 'ওয়ার্ড নং   প্রদান করূন';
            }
            if(empty($post_office)){
                $error_array[] = 'ডাকঘর  প্রদান করূন';
            }
            if(empty($upazila)){
                $error_array[] = 'উপজেলা প্রদান করূন';
            }
            if(empty($district)){
                $error_array[] = 'জেলা প্রদান করূন';
            }
            if(empty($occupation)){
                $error_array[] = 'পেশা চিহ্নিত করূন';
            }
            if(empty($dealer_name)){
                $error_array[] = 'ডিলারের নাম সিলেক্ট করুন ';
            }
            if(empty($issueingAuthority)){
                $error_array[] = 'ইস্যুকারী কর্তৃপক্ষের নাম সিলেক্ট করুন  ';
            }
            if(empty($cardIssueDt)){
                $error_array[] = 'কার্ড ইস্যুর তারিখ    ';
            }

            if(empty($error_array)) {
                if (!empty($is_verify) && $is_verify == 2) {
                    $pic = (!empty($old_image) ? $old_image : '');
                } else {
                    if (isset($_FILES['image']['name']) && !empty($_FILES['image']['name'])) {
                        $pic = $this->setup->uploadimageFoodApplicant($_FILES['image']);
                    } elseif (!empty($old_image) && empty($_FILES['image']['name'])) {
                        $pic = (!empty($old_image) ? $old_image : '');
                    } else {
                        $pic = 'img/default/profile.png';
                    }
                }
                $data = array(
                    "applicant_id" => $this->FoodModel->generateApplicantID(),
                    "card_no" => (!empty(trim($_POST['cardNo'])) ? trim($_POST['cardNo']) : ''),
                    "nid" => (!empty(trim($_POST['n_id'])) ? trim($_POST['n_id']) : ''),
                    "name" => (!empty(trim($_POST['full_name'])) ? trim($_POST['full_name']) : ''),
                    "father_name" => (!empty(trim($_POST['guardina_name'])) ? trim($_POST['guardina_name']) : ''),

                    "mother_name" => (!empty(trim($_POST['mother_name'])) ? trim($_POST['mother_name']) : NULL),
                    "guardin_type" => (!empty(trim($_POST['guardina_type'])) ? trim($_POST['guardina_type']) : NULL),
                    "occupation" => (!empty(trim($_POST['occupation'])) ? trim($_POST['occupation']) : NULL),
                    "dealer_id" => (!empty(trim($_POST['dealer_name'])) ? trim($_POST['dealer_name']) : NULL),
                    "mobile" => (!empty(trim($_POST['mobile'])) ? trim($_POST['mobile']) : NULL),
                    "card_issue_dt" => (!empty($cardIssueDt) ? date('Y-m-d', strtotime($_POST['cardIssueDt'])) : ''),

                    "spouse_name" => (!empty(trim($_POST['spouse_name'])) ? trim($_POST['spouse_name']) : NULL),
                    "date_of_birth" => (!empty($dofb) ? date('Y-m-d', strtotime($_POST['dofb'])) : ''),
                    "village" => (!empty(trim($_POST['village'])) ? trim($_POST['village']) : ''),
                    "wordNo" => (!empty(trim($_POST['wordNo'])) ? trim($_POST['wordNo']) : ''),
                    "post_office" => (!empty(trim($_POST['post_office'])) ? trim($_POST['post_office']) : ''),
                    "upazila" => (!empty(trim($_POST['upazila'])) ? trim($_POST['upazila']) : ''),
                    "district" => (!empty(trim($_POST['district'])) ? trim($_POST['district']) : ''),
                    "issueingAuthority" => (!empty(trim($_POST['issueingAuthority'])) ? trim($_POST['issueingAuthority']) : ''),
                    "pic" => $pic,
                    "is_verify" => (!empty($is_verify) ? $is_verify : 1),
                    "api_data" => (!empty($api_data) ? $api_data : 1),
                    "created_time" => date('Y-m-d H:i:s'),
                    "created_by" => $this->session->userdata('id'),
                    "created_ip" => (string)$this->input->ip_address(),
                );
                $this->db->trans_start();
                     $insert = $this->db->insert('food_receiver_applicant_info', $data);
                $this->db->trans_complete();

                if ($this->db->trans_status() === FALSE) {
                    # Something went wrong.
                    $this->db->trans_rollback();
                    $success_output='Failed to Saved Information';
                }
                else {
                    # Everything is Perfect.
                    # Committing data to the database.
                    $this->db->trans_commit();
                    $success_output='Successfully Saved this Information';
                }

            }
            $output = array(
                'error' => $error_array,
                'success' => $success_output,
                'redirect_page' => 'FoodController'
            );
            echo json_encode($output);
        }
    }

    function foodProgram(){
        $data["add_title"] = "নতুন কর্মসূচি তৈরি ";
        $data["title"] = "কর্মসূচি সমূহ ";
        $data["record"] = $this->FoodModel->get_all_info('id,title,person_amt,total_allotment',"food_program_info",['is_active'=>1]);

        $this->load->view('admin/topBar',$data);
        $this->load->view('admin/leftMenu');
        $this->load->view('foodDistribute/foodProgram');
        $this->load->view('admin/footer');
    }
    function dealerInfo(){
        $data["add_title"] = "নতুন ডিলার  ";
        $data["title"] = "ডিলার সমূহ ";
        $data["record"] = $this->FoodModel->get_all_info('id,type,name,shop_name,address,mobile,is_active',"food_dealer_info",['is_active'=>1,'type'=>1]);

        $this->load->view('admin/topBar',$data);
        $this->load->view('admin/leftMenu');
        $this->load->view('foodDistribute/dealerInfo');
        $this->load->view('admin/footer');
    }
    function issuingAuthority(){
        $data["add_title"] = "নতুন ইস্যুকারী  ";
        $data["title"] = "ইস্যুকারী সমূহ ";
        $data["record"] = $this->FoodModel->get_all_info('id,type,name,designation,address,mobile,is_active',"food_dealer_info",['is_active'=>1,'type'=>2]);

        $this->load->view('admin/topBar',$data);
        $this->load->view('admin/leftMenu');
        $this->load->view('foodDistribute/issuingAuthority');
        $this->load->view('admin/footer');
    }

    function foodCollection(){
        $data["add_title"] = "খাদ্য সংগ্রহ  ";
        $data["title"] = "খাদ্য সংগ্রহের রেকর্ড সমূহ ";
        $data["record"] = $this->FoodModel->get_all_info('*',"food_receiver_record",['is_active'=>1]);

        $this->load->view('admin/topBar',$data);
        $this->load->view('admin/leftMenu');
        $this->load->view('foodDistribute/dealerInfo');
        $this->load->view('admin/footer');
    }
    function foodReport(){
        $data["add_title"] = "খাদ্য সংগ্রহ  ";
        $data["title"] = "খাদ্য সংগ্রহের রেকর্ড সমূহ ";
        $data["record"] = $this->FoodModel->get_all_info('*',"food_receiver_record",['is_active'=>1]);

        $this->load->view('admin/topBar',$data);
        $this->load->view('admin/leftMenu');
        $this->load->view('foodDistribute/dealerInfo');
        $this->load->view('admin/footer');
    }
    function updateFoodProgram(){
        extract($_POST);
        if(isset($_POST['submit_info'])){
            $error_array = array();
            $success_output = '';

            if(empty($programName)){
                $error_array[] = 'কর্মসূচির নাম প্রদান করুন ';
            }
            if(empty($person_amt)){
                $error_array[] = 'প্রত্যেক জনের জন্য বরাদ্ধ প্রদান করুন';
            }

            if(empty($total_allotment)){
                $error_array[] = 'মোট বরাদ্ধ  প্রদান করুন';
            }
            if(empty($status)){
                $error_array[] = 'স্ট্যাটাস চিহ্নিত করূন';
            }


            if(empty($error_array)) {
                if(empty($updateId)) {
                    $data = array(
                        "title" => (!empty(trim($programName)) ? trim($programName) : ''),
                        "person_amt" => (!empty(trim($person_amt)) ? trim($person_amt) : ''),
                        "total_allotment" => (!empty(trim($total_allotment)) ? trim($total_allotment) : ''),
                        "is_active" => (!empty(trim($status)) ? trim($status) : ''),
                        "created_time" => date('Y-m-d H:i:s'),
                        "created_by" => $this->session->userdata('id'),
                        "created_ip" => (string)$this->input->ip_address(),
                    );


                    $this->db->trans_start();
                    $this->db->insert('food_program_info', $data);
                    $this->db->trans_complete();
                    $success_output='Successfully Saved this Information';

                }else{

                    $data = array(
                        "title" => (!empty(trim($programName)) ? trim($programName) : ''),
                        "person_amt" => (!empty(trim($person_amt)) ? trim($person_amt) : ''),
                        "total_allotment" => (!empty(trim($total_allotment)) ? trim($total_allotment) : ''),
                        "is_active" => (!empty(trim($status)) ? trim($status) : ''),
                        "updated_time" => date('Y-m-d H:i:s'),
                        "updated_by" => $this->session->userdata('id'),
                        "updated_ip" => (string)$this->input->ip_address(),
                    );


                    $this->db->trans_start();
                    $this->db->where('id',$updateId);
                    $this->db->update('food_program_info', $data);
                    $this->db->trans_complete();
                    $success_output='Successfully update this Information';
                }

                if ($this->db->trans_status() === FALSE) {
                    # Something went wrong.
                    $this->db->trans_rollback();
                    $success_output='Failed to Update Information';
                } else {
                    # Everything is Perfect.
                    # Committing data to the database.
                    $this->db->trans_commit();

                }

            }
            $output = array(
                'error' => $error_array,
                'success' => $success_output,
                'redirect_page' => 'FoodController/foodProgram'
            );
            echo json_encode($output);
        }
    }

    function getFoodProgram(){
        extract($_POST);
        if(!empty($id)){
            $info=$this->FoodModel->get_single_info('*',"food_program_info",['id'=>$id]);
            if(!empty($info)){
                echo json_encode(['status'=>'success','message'=>'Successfully Data Found','data'=>$info]); exit;
            }else{
                echo json_encode( ['status'=>'error','message'=>'No Data Found','data'=>[]]);exit;
            }
        }
    }
    function delete_food_program(){
        extract($_POST);
        if(!empty($id)){
            $data=[
                "is_active" =>0,
                "updated_time" => date('Y-m-d H:i:s'),
                "updated_by" => $this->session->userdata('id'),
                "updated_ip" => (string)$this->input->ip_address(),
            ];
            $info=$this->FoodModel->get_single_info('id',"food_receiver_record",['food_program_id'=>$id]);
            if(!empty($info)){
                echo json_encode( ['status'=>'error','message'=>'Sorry ! This information already used in food received.']);exit;
            }

            $this->db->trans_start();
                $this->db->where('id',$id);
                $this->db->update("food_program_info",$data);
            $this->db->trans_complete();

            if ($this->db->trans_status() === FALSE) {
                # Something went wrong.
                $this->db->trans_rollback();
                echo json_encode( ['status'=>'error','message'=>'Failed to delete information',]);exit;
            } else {
                # Everything is Perfect.
                # Committing data to the database.
                $this->db->trans_commit();
                echo json_encode(['status'=>'success','message'=>'Successfully Delete Information']); exit;

            }

        }
    }

    function updateAuthorityInfo(){
        extract($_POST);
        if(isset($_POST['submit_info'])){
            $error_array = array();
            $success_output = '';

            if(empty($name)){
                $error_array[] = 'নাম প্রদান করুন ';
            }
            if(!empty($type) && $type==1) {
                if (empty($shopName)) {
                    $error_array[] = 'ডিলারের দোকানের নাম প্রদান করুন';
                }
            }

            if(empty($address)){
                $error_array[] = 'ঠিকানা  প্রদান করুন';
            }
            if(empty($mobile)){
                $error_array[] = 'মোবাইল নম্বর  প্রদান করুন';
            }
            if(empty($type)){
                $error_array[] = 'Type  প্রদান করুন';
            }

            if(empty($status)){
                $error_array[] = 'স্ট্যাটাস চিহ্নিত করূন';
            }


            if(empty($error_array)) {
                if(empty($updateId)) {
                    $data = array(
                        "name" => (!empty(trim($name)) ? trim($name) : ''),
                        "shop_name" => (!empty(trim($shopName)) ? trim($shopName) : ''),
                        "address" => (!empty(trim($address)) ? trim($address) : ''),
                        "mobile" => (!empty(trim($mobile)) ? trim($mobile) : ''),
                        "designation" => (!empty(trim($designation)) ? trim($designation) : ''),
                        "type" => (!empty(trim($type)) ? trim($type) : ''),
                        "is_active" => (!empty(trim($status)) ? trim($status) : ''),
                        "created_time" => date('Y-m-d H:i:s'),
                        "created_by" => $this->session->userdata('id'),
                        "created_ip" => (string)$this->input->ip_address(),
                    );


                    $this->db->trans_start();
                    $this->db->insert('food_dealer_info', $data);
                    $this->db->trans_complete();
                    $success_output='Successfully Saved this Information';

                }else{

                    $data = array(
                        "name" => (!empty(trim($name)) ? trim($name) : ''),
                        "shop_name" => (!empty(trim($shopName)) ? trim($shopName) : ''),
                        "address" => (!empty(trim($address)) ? trim($address) : ''),
                        "mobile" => (!empty(trim($mobile)) ? trim($mobile) : ''),
                        "designation" => (!empty(trim($designation)) ? trim($designation) : ''),
                        "is_active" => (!empty(trim($status)) ? trim($status) : ''),
                        "updated_time" => date('Y-m-d H:i:s'),
                        "updated_by" => $this->session->userdata('id'),
                        "updated_ip" => (string)$this->input->ip_address(),
                    );


                    $this->db->trans_start();
                    $this->db->where('id',$updateId);
                    $this->db->update('food_dealer_info', $data);
                    $this->db->trans_complete();
                    $success_output='Successfully update this Information';
                }

                if ($this->db->trans_status() === FALSE) {
                    # Something went wrong.
                    $this->db->trans_rollback();
                    $success_output='Failed to Update Information';
                } else {
                    # Everything is Perfect.
                    # Committing data to the database.
                    $this->db->trans_commit();

                }

            }
            $output = array(
                'error' => $error_array,
                'success' => $success_output,
                'redirect_page' => 'FoodController/dealerInfo'
            );
            echo json_encode($output);
        }
    }

    function getAuthorityInfo(){
        extract($_POST);
        if(!empty($id)){
            $info=$this->FoodModel->get_single_info('*',"food_dealer_info",['id'=>$id]);
            if(!empty($info)){
                echo json_encode(['status'=>'success','message'=>'Successfully Data Found','data'=>$info]); exit;
            }else{
                echo json_encode( ['status'=>'error','message'=>'No Data Found','data'=>[]]);exit;
            }
        }
    }
    function delete_authority_nfo(){
        extract($_POST);
        if(!empty($id)){
            $data=[
                "is_active" =>0,
                "updated_time" => date('Y-m-d H:i:s'),
                "updated_by" => $this->session->userdata('id'),
                "updated_ip" => (string)$this->input->ip_address(),
            ];
            $info=$this->FoodModel->get_single_info('id',"food_receiver_applicant_info",['dealer_id'=>$id]);
            if(!empty($info)){
                echo json_encode( ['status'=>'error','message'=>'Sorry ! This information already used in Applicant.']);exit;
            }

            $this->db->trans_start();
            $this->db->where('id',$id);
            $this->db->update("food_dealer_info",$data);
            $this->db->trans_complete();

            if ($this->db->trans_status() === FALSE) {
                # Something went wrong.
                $this->db->trans_rollback();
                echo json_encode( ['status'=>'error','message'=>'Failed to delete information',]);exit;
            } else {
                # Everything is Perfect.
                # Committing data to the database.
                $this->db->trans_commit();
                echo json_encode(['status'=>'success','message'=>'Successfully Delete Information']); exit;

            }

        }
    }


}